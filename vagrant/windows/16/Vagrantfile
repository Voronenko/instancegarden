machines = {
    :win16 => {
        :box => 'mwrock/Windows2016',
        :ip => '192.168.56.120',
    },
}

Vagrant.configure("2") do |config|
  machines.each do |hostname, properties|

    config.vm.define hostname do |box|
      box.vm.box = properties[:box]
      box.vm.hostname = hostname
      box.vm.box_url = properties[:box]
      # box.vm.box_version = ""

      box.vm.network :private_network, ip: properties[:ip]

      # Does not share . by default unless :share_cwd => true
      box.vm.synced_folder '.', '/vagrant', disabled: !properties[:share_cwd]


      box.vm.provision "shell", privileged: "true", powershell_elevated_interactive: "true", inline: <<-SHELL
       [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
       Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
       Set-TimeZone 'Eastern Standard Time'
      SHELL

      # Ansible remoting
      box.vm.provision "shell", privileged: "true", powershell_elevated_interactive: "true", inline: <<-SHELL
       [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
       Set-ExecutionPolicy Bypass -Scope Process -Force;
       iex ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/Voronenko/winfiles/master/setup/ConfigureRemotingForAnsible.ps1'))
      SHELL

      # Linux shell
      box.vm.provision "shell", privileged: "true", powershell_elevated_interactive: "true", inline: <<-SHELL
       [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
       Set-ExecutionPolicy Bypass -Scope Process -Force;
       iex ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/Voronenko/winfiles/master/setup/GetPowershell6LinuxRemoting.ps1'))
      SHELL


      # if !properties.key?(:install) or properties[:install]

      #   if !"#{hostname}".start_with?("win")
      #     box.vm.provision "shell",
      #                      env: {
      #                          :SOMEENV => "SOMEVALUE",
      #                      },
      #                      path: "scripts/vagrant_init_debian.sh",
      #                      privileged: false
      #   else
      #     $script = <<-SCRIPT
      #     Import-Module c:\\some_install_script.ps1
      #     install
      #     SCRIPT

      #     box.vm.provision "shell",
      #                      env: {
      #                          :SOMEENV => "SOMEVALUE",
      #                      },
      #                      inline: $script,
      #                      privileged: true
      #   end

      # end

      box.vm.provider :virtualbox do |v|
        v.memory = 4096
        v.cpus = 2
        # v.memory = 16384
        # v.cpus = 4
      end
    end

  end
end
